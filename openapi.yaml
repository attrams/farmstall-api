openapi: 3.0.3

info:
  title: FarmStall API
  version: v1
  description: |-
    An API for writing reviews about your favourite (or worst) farm stalls.
    
    ![Picture of produce](https://farmstall.designapis.com/img/produce-banner.jpg)
    
    ---
    
    # Auth
    
    To create **Reviews** without being _anonymous_. You need to add a **MyUserToken** to
    the Authorization header.
    
    To get a **MyUserToken**:
    1. Create a **User** with [POST /users](#Users/post_users)
    1. Get a **MyUserToken** by calling [POST /tokens](#Users/post_tokens) with your **User**
    credentials.
    
    # Reviews
    
    Reviews are the heart of this API. <br/>
    Registered **Users** and anonymous users can both write reviews based on their experience
    at farm stalls.
    
    Each review comes with a rating of between one and five stars inclusive.
    
    - One star being the worst experience
    - Five stars being the best
    
    ### Example Reviews
    
    "A wonderful time!" &mdash; Bob McNally
    <br/>
    ![5 stars](https://farmstall.designapis.com/img/rating-5.png)
    
    "An awful place" &mdash; _Anonymous_
    <br/>
    ![1 star](https://farmstall.designapis.com/img/rating-1.png)
    
    "A totally average place." &mdash; Jane Fair
    <br/>
    ![3 stars](https://farmstall.designapis.com/img/rating-3.png)
  
servers:
- url: https://farmstall.designapis.com/v1

tags:
  - name: Reviews
    description: |
      Reviews of your favourite/worst farm stalls.
      
  - name: Users
    description: |
      Users and authentication.
  
paths:

  /reviews:
    get:
      description: Get a bunch of reviews
      
      tags:
      - Reviews
      
      parameters:
      - name: maxRating
        description: Filter the reviews by the maximum rating
        in: query
        schema:
          type: number
          
      responses:
        200:
          description: A bunch of reviews
          content:
            application/json:
              schema:
                type: array
                
                items:
                  type: object
                  
                  properties:
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                      
                    message:
                      type: string
                      
                    uuid:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                      
                    userId:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                      nullable: true
                      
    post:
      description: Create a new review
      
      tags:
      - Reviews
      
      requestBody:
        description: A new review
        
        content:
          application/json:
            schema:
              type: object
              
              example:
                message: A lovely experience
                rating: 4
              
              properties:
                message:
                  type: string
                  example: Blew my mind
                  
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  example: 5
                  
                userId:
                  type: string
                  pattern: '^[0-9a-fA-F\-]{36}$'
                  nullable: true
                  
      responses:
        201:
          description: Successfully created a new Review
          
          content:
            application/json:
              schema:
                type: object
                
                properties:
                  message:
                    type: string
                    example: An awesome time for the whole family
                    
                  rating:
                    type: integer
                    minimum: 1
                    maximum: 5
                    
                  userId:
                    type: string
                    nullable: true
                    pattern: '^[0-9a-fA-F\-]{36}$'
                    
                  uuid:
                    type: string
                    pattern: '^[0-9a-fA-F\-]{36}$'
          
      security:
        - {}
        - MyUserToken: []
          
  /reviews/{reviewId}:
    get:
      description: Get a single review object
      
      tags:
      - Reviews
      
      parameters:
      - in: path
        name: reviewId
        required: true
        schema:
          type: string
          description: The Review's ID
          example: 3b5b1707-b82c-4b1d-9078-157053902525
      
      responses:
       200:
        description: Review object
        
        content:
          application/json:
            schema:
              type: object
              
              properties:
                message:
                  type: string
              
                rating: 
                  type: integer
                  minimum: 1
                  maximum: 5
                  
                userId:
                  type: string
                  nullable: true
                  pattern: '^[0-9a-fA-F\-]{36}$'
                  
                uuid:
                  type: string
                  pattern: '^[0-9a-fA-F\-]{36}$'
                  
  /users:
    post:
      description: Create a new user
      
      tags:
      - Users
      
      requestBody:
        description: User details
        
        content:
          application/json:
            schema:
              type: object
            
              properties:
                username:
                  type: string
                  example: ponelat
                  
                password:
                  type: string
                  format: password
                  
                fullName:
                  type: string
                  example: Josh Ponelat
                  
      responses:
        201:
          description: Successfully created a new User
              
          content:
            application/json:
              schema:
                type: object
                
                properties:
                  username:
                    type: string
                    example: ponelat
                    
                  uuid:
                    type: string
                    pattern: f7f680a8-d111-421f-b6b3-493ebf905078
                    
                    
  /tokens:
    post:
      description: Create a token for User
      
      tags:
      - Users
      
      requestBody:
        description: create a token for user
        
        content:
          application/json:
            schema:
              type: object
              
              properties:
                username:
                  type: string
                  example: ponelat
                  
                password:
                  type: string
                  format: password
                  
      responses:
        201:
          description: Create a new token for gaining access to resources
          
          content:
            application/json:
              schema:
                type: object
                
                properties:
                  token:
                    type: string
                  
components:
  securitySchemes:
    MyUserToken:
      type: apiKey
      in: header
      name: Authorization